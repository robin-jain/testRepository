<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-18T23:32:02Z" name="Default suite" finished-at="2021-11-18T23:32:18Z" duration-ms="16114">
    <groups>
    </groups>
    <test started-at="2021-11-18T23:32:02Z" name="Default test" finished-at="2021-11-18T23:32:18Z" duration-ms="16114">
      <class name="TestCases.TC_001">
        <test-method is-config="true" signature="startReprt()[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:02Z" name="startReprt" finished-at="2021-11-18T23:32:02Z" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReprt -->
        <test-method is-config="true" signature="f1()[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:03Z" name="f1" finished-at="2021-11-18T23:32:03Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method is-config="true" signature="method(java.lang.reflect.Method)[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:03Z" name="method" finished-at="2021-11-18T23:32:03Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC_001.TC_001_loginandVerify(java.util.Map) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method signature="TC_001_loginandVerify(java.util.Map)[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:03Z" name="TC_001_loginandVerify" data-provider="getData" finished-at="2021-11-18T23:32:11Z" duration-ms="7883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=test2, Value4=test3, TestCaseName=TC_001_loginandVerify, Value7=test6, userid=Controller, Value8=test7, Value5=test4, Value6=test5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001_loginandVerify -->
        <test-method is-config="true" signature="method(java.lang.reflect.Method)[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:11Z" name="method" finished-at="2021-11-18T23:32:11Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC_001.TC_001_loginandVerify(java.util.Map) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method is-config="true" signature="f1()[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:11Z" name="f1" finished-at="2021-11-18T23:32:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method signature="TC_001_loginandVerify(java.util.Map)[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:11Z" name="TC_001_loginandVerify" data-provider="getData" finished-at="2021-11-18T23:32:14Z" duration-ms="3034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=test2, Value4=test3, TestCaseName=TC_001_loginandVerify, Value7=test6, userid=Controller, Value8=test7, Value5=test4, Value6=test5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001_loginandVerify -->
        <test-method is-config="true" signature="f1()[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:14Z" name="f1" finished-at="2021-11-18T23:32:14Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method is-config="true" signature="method(java.lang.reflect.Method)[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:14Z" name="method" finished-at="2021-11-18T23:32:14Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC_001.TC_001_loginandVerify(java.util.Map) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method signature="TC_001_loginandVerify(java.util.Map)[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:14Z" name="TC_001_loginandVerify" data-provider="getData" finished-at="2021-11-18T23:32:18Z" duration-ms="4083" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "java.util.Map.get(Object)" because "map" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "java.util.Map.get(Object)" because "map" is null
at TestCases.TC_001.TC_001_loginandVerify(TC_001.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001_loginandVerify -->
        <test-method is-config="true" signature="fn_Suit()[pri:0, instance:TestCases.TC_001@20c0a64d]" started-at="2021-11-18T23:32:18Z" name="fn_Suit" finished-at="2021-11-18T23:32:18Z" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fn_Suit -->
      </class> <!-- TestCases.TC_001 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
