<?xml version="1.0" encoding="UTF-8"?>
<keywordspec format="ROBOT" generated="2021-10-29T00:14:58Z" lineno="1" name="Dialogs" scope="GLOBAL" source="C:\Program Files\python\lib\site-packages\robot\libraries\Dialogs.py" specversion="3" type="LIBRARY">
<version>4.1.2</version>
<doc>A test library providing dialogs for interacting with users.

``Dialogs`` is Robot Framework's standard library that provides means
for pausing the test execution and getting input from users. The
dialogs are slightly different depending on whether tests are run on
Python, IronPython or Jython but they provide the same functionality.

Long lines in the provided messages are wrapped automatically. If you want
to wrap lines manually, you can add newlines using the ``\n`` character
sequence.

The library has a known limitation that it cannot be used with timeouts
on Python.</doc>
<tags>
</tags>
<inits>
</inits>
<keywords>
<kw lineno="55" name="Execute Manual Step">
<arguments repr="message, default_error=">
<arg kind="POSITIONAL_OR_NAMED" repr="message" required="true">
<name>message</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" repr="default_error=" required="false">
<name>default_error</name>
<default />
</arg>
</arguments>
<doc>Pauses test execution until user sets the keyword status.

User can press either ``PASS`` or ``FAIL`` button. In the latter case execution
fails and an additional dialog is opened for defining the error message.

``message`` is the instruction shown in the initial dialog and
``default_error`` is the default value shown in the possible error message
dialog.</doc>
<shortdoc>Pauses test execution until user sets the keyword status.</shortdoc>
</kw>
<kw lineno="93" name="Get Selection From User">
<arguments repr="message, *values">
<arg kind="POSITIONAL_OR_NAMED" repr="message" required="true">
<name>message</name>
</arg>
<arg kind="VAR_POSITIONAL" repr="*values" required="false">
<name>values</name>
</arg>
</arguments>
<doc>Pauses test execution and asks user to select a value.

The selected value is returned. Pressing ``Cancel`` fails the keyword.

``message`` is the instruction shown in the dialog and ``values`` are
the options given to the user.

Example:
| ${user} = | Get Selection From User | Select user | user1 | user2 | admin |</doc>
<shortdoc>Pauses test execution and asks user to select a value.</shortdoc>
</kw>
<kw lineno="107" name="Get Selections From User">
<arguments repr="message, *values">
<arg kind="POSITIONAL_OR_NAMED" repr="message" required="true">
<name>message</name>
</arg>
<arg kind="VAR_POSITIONAL" repr="*values" required="false">
<name>values</name>
</arg>
</arguments>
<doc>Pauses test execution and asks user to select multiple values.

The selected values are returned as a list. Selecting no values is OK
and in that case the returned list is empty. Pressing ``Cancel`` fails
the keyword.

``message`` is the instruction shown in the dialog and ``values`` are
the options given to the user.

Example:
| ${users} = | Get Selections From User | Select users | user1 | user2 | admin |

New in Robot Framework 3.1.</doc>
<shortdoc>Pauses test execution and asks user to select multiple values.</shortdoc>
</kw>
<kw lineno="70" name="Get Value From User">
<arguments repr="message, default_value=, hidden=False">
<arg kind="POSITIONAL_OR_NAMED" repr="message" required="true">
<name>message</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" repr="default_value=" required="false">
<name>default_value</name>
<default />
</arg>
<arg kind="POSITIONAL_OR_NAMED" repr="hidden=False" required="false">
<name>hidden</name>
<default>False</default>
</arg>
</arguments>
<doc>Pauses test execution and asks user to input a value.

Value typed by the user, or the possible default value, is returned.
Returning an empty value is fine, but pressing ``Cancel`` fails the keyword.

``message`` is the instruction shown in the dialog and ``default_value`` is
the possible default value shown in the input field.

If ``hidden`` is given a true value, the value typed by the user is hidden.
``hidden`` is considered true if it is a non-empty string not equal to
``false``, ``none`` or ``no``, case-insensitively. If it is not a string,
its truth value is got directly using same
[http://docs.python.org/library/stdtypes.html#truth|rules as in Python].

Example:
| ${username} = | Get Value From User | Input user name | default    |
| ${password} = | Get Value From User | Input password  | hidden=yes |</doc>
<shortdoc>Pauses test execution and asks user to input a value.</shortdoc>
</kw>
<kw lineno="47" name="Pause Execution">
<arguments repr="message=Test execution paused. Press OK to continue.">
<arg kind="POSITIONAL_OR_NAMED" repr="message=Test execution paused. Press OK to continue." required="false">
<name>message</name>
<default>Test execution paused. Press OK to continue.</default>
</arg>
</arguments>
<doc>Pauses test execution until user clicks ``Ok`` button.

``message`` is the message shown in the dialog.</doc>
<shortdoc>Pauses test execution until user clicks ``Ok`` button.</shortdoc>
</kw>
</keywords>
<datatypes>
</datatypes>
</keywordspec>